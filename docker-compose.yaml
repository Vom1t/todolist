version: '3.8'

services:
  db:
    container_name: todolist_database
    image: postgres:12.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - todolist_pg_data:/var/lib/postgresql/data/
    ports:
    - "5432:5432"
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 3s
      timeout: 3s
      retries: 5

  api:
    build: .
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  collect_static:
    build: .
    env_file:
      - .env
    environment:
      DB_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python3 manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/static

  redis:
    image: redis:7.0.8-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server

  telegram_bot:
    build: .
    env_file:
      - .env
    restart: always
    environment:
      DB_HOST: db
    depends_on:
      api:
        condition: service_started
      redis:
        condition: service_started
    command: python3 manage.py runbot

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    ports:
      -  "80:80"
    depends_on:
      collect_static:
        condition: service_completed_successfully
    volumes:
      - django_static:/usr/share/nginx/html/static
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  todolist_pg_data:
    driver: local
  django_static:
    driver: local
